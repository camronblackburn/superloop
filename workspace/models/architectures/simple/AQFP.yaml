########################################################
# Simple demo architecture 
#     main memory > register > MAC array 
#
# AQFP 
#
# defined with input variables passed from jinja2 parser: 
#    - reg_depth: depth of the register storage
#    - reg_width: width of the register storage
#    - n_macs: number of MACs in MAC array 
########################################################

{{include_text("defines.yaml")}}

architecture: 
  version: 0.4
  # top level is hierarchical by default
  nodes: 
    - !Component
      name: main memory
      class: dummy_storage # placeholder for accelergy plug in
      subclass: cryoDRAM
      attributes: 
        <<: [*shared_attributes, *cryo_cmos_attributes]
        width: 1024
        depth: 1024 * 1024 * 8 * 8 # 8GB
      
    - !Component
      name: register
      class: dummy_storage # placeholder for accelergy plug in
      subclass: aqfp_reg_sr
      attributes: 
        <<: [*shared_attributes, *aqfp_component_attributes]
        width: {{reg_width}}
        depth: {{reg_depth}}
        cell_bit_depth: DATAWIDTH
        array_w: width
        array_h: depth // cell_bit_depth
      constraints: {dataspace: {keep: [Inputs, Outputs, Weights]}}

    - !Container
      name: mac_array
      spatial: {meshX: {{n_macs}}}
      constraints: {spatial: {permutation: [R, S, C, P, Q, M, N], split: 999}}

    - !Component
      name: mac
      class: dummy_storage # placeholder for accelergy plug in
      subclass: aqfp_intmac
      attributes: 
        <<: [*shared_attributes, *aqfp_component_attributes]
        multiplier_width: DATAWIDTH
        adder_width: DATAWIDTH * 2
        width: DATAWIDTH
        depth: 1
      constraints:
        temporal: {factors_only: []}
        dataspace: {bypass: ["*"]}

    - !Component
      name: dummy_mac_here_to_fix_a_bug
      class: intmac
      subclass: dummy_op
      attributes: {}
